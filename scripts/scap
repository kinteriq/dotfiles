#!/usr/bin/env bash

# scap allows you to take a screenshot, add a markup to it in the Preview.app and
# share it by copying to clipboard or uploading it using SFTP.
#
# Dependencies (all available on mac os without additonal installation):
# - screencapture - takes and saves a screenshot
# - Preview.app - allows to add a markup to a screenshot
# - osascript - integration with the system using AppleScript
# - scp - copy a screenshot securely to a server (SFTP)
#
# Usage:
# scap [COMMAND]
#
# Commands:
#   last - takes the last screenshot and continues with it.
#   list - list screenshots in a directory.

set -e

# Screenshots' directory and file name format configuration.
DIR="$HOME/Desktop/Screenshots"
FILE_NAME=$(date "+Screenshot-%Y-%m-%d-%H-%M-%S.png")
FILE_PATH="$DIR/$FILE_NAME"

# SFTP sharing configuration.
SFTP_PORT=2221
SFTP_USER=AlekseyKuznetsov
SFTP_HOST=jing.saritasa.com

# Activates an app by a PID.
# Pass the PID as the first argument.
activate_by_pid() {
  osascript -e "
    tell application \"System Events\"
      set theprocs to every process whose unix id is ${1}
      repeat with proc in theprocs
        set the frontmost of proc to true
      end repeat
    end tell
  "
}

# Make sure that the output directory exist and create one if not.
if ! test -d "$DIR"; then
    mkdir "$DIR"
fi

if test "$1" = "last"; then
    # Search the last taken screenshot and continue with it.
    FILE_PATH=$(ls -1t "$DIR/"*.png | sed -n "1p")
    if test -z "$FILE_PATH"; then
        echo "There are no screenshots in $DIR"
        exit 1
    fi
    echo "Using $FILE_PATH"
elif test "$1" = "list"; then
    find "$DIR" -name '*.png'
    exit 0
else
    # Start screen capture.
    echo "You can take a screenshot now! Hit Space key to toggle mouse/window selection."
    echo "Screenshot will be open in the Preview.app. Quit (Cmd+Q) the Preview.app to continue."
    screencapture -i "$FILE_PATH"
    if ! test -s "$FILE_PATH"; then
        exit 0
    fi
fi

# Open the Preview.app with a screenshot and wait for user to quit it.
open -n -W -a "Preview" "$FILE_PATH"

# Find PID of a terminal app where the script is running and bring it to the front.
# We assume that PID will be the first line (apart from header) of `ps -o ppid` command.
PARENT_PID=$(ps -T -o ppid | sed -n "2p")
if test -n "$PARENT_PID"; then
    activate_by_pid "$PARENT_PID"
fi

# Ask sharing options.
echo ""
echo "How do you want to share the screenshot?"
echo "c - copy to clipboard"
echo "u - upload using sftp"
read -p "[c/u]: " SHARING_OPTION
if test "$SHARING_OPTION" = "c"; then
    osascript -e "set the clipboard to (read (POSIX file \"$FILE_PATH\") as JPEG picture)"
    echo "Copied to clipboard"
elif test "$SHARING_OPTION" = "u"; then
    echo "Uploading..."
    scp -P $SFTP_PORT "$FILE_PATH" "$SFTP_USER@$SFTP_HOST:/"
    open "https://$SFTP_HOST/$SFTP_USER/$FILE_NAME"
fi

